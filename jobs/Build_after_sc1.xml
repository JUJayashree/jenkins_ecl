<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>This modified job is created to build ‘jenkins_build’ file if ECL syntax errors are zero and build is success else task should only upload the comment on ECL syntax errors. [ Note :The comment file sent to Pull Request created using HTML tags ]&#xd;
</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.29.2">
      <projectUrl>https://github.com/JUJayashree/jenkins_ecl/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <url>https://github.com/JUJayashree/jenkins_ecl.git</url>
        <credentialsId>272c2e65-9429-4591-a4fa-5bfbac438d8d</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
      <hudson.plugins.git.BranchSpec>
        <name>${sha1}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <jenkins.triggers.ReverseBuildTrigger>
      <spec></spec>
      <upstreamProjects>pr_buildstatus_comment2</upstreamProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </jenkins.triggers.ReverseBuildTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

COMMENT_LOG_PATH=&quot;/var/lib/jenkins/workspace/pr_buildstatus_comment2/pr_buildstatus_comment.log&quot;

QUERY_PATH=&quot;/var/lib/jenkins/workspace/pr_buildstatus_comment2&quot;

if [ -f $COMMENT_LOG_PATH ]; then
    rm $COMMENT_LOG_PATH
fi

echo $&apos;\n&apos;&quot;Automatic Build after syntax check:&quot;$&apos;\n&apos; &gt;&gt; $COMMENT_LOG_PATH 
cd /var/lib/jenkins/workspace/pr_buildstatus_comment/
chmod a=rwx jenkins_build
./jenkins_build 2&gt;&gt; $COMMENT_LOG_PATH


cat $COMMENT_LOG_PATH

b_error=0
b_warning=0
while read line  
do
	if [[ $line =~ &quot; error &quot; ]]; then
		b_error=`expr $b_error + 1`
	fi
	if [[ $line =~ &quot; warning &quot; ]]; then
		b_warning=`expr $b_warning + 1`
	fi
	
done &lt; $COMMENT_LOG_PATH
echo &quot;Errors=&quot; $b_error
echo &quot;warnings=&quot; $b_warning

echo &quot;&lt;table style=&quot;width:100%&quot;&gt;
  &lt;tr&gt;
    &lt;th&gt;Test&lt;/th&gt;
    &lt;th&gt;Errors&lt;/th&gt; 
    &lt;th&gt;Warnings&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;syntax check&lt;/td&gt;
    &lt;td&gt;0&lt;/td&gt; 
    &lt;td&gt;0&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;ECL files Build&lt;/td&gt;
    &lt;td&gt;$b_error&lt;/td&gt; 
    &lt;td&gt;$b_warning&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;&quot; &gt; /var/lib/jenkins/workspace/pr_buildstatus_comment2/jenkin_pr_comment.log


if [ &quot;$b_error&quot; -eq 0 ]; then
	exit 0
else
	echo &quot;Error Details: &lt;a href=&quot;${BUILD_URL}console&quot;&gt;Click here&lt;/a&gt; &quot; &gt;&gt; /var/lib/jenkins/workspace/pr_buildstatus_comment2/jenkin_pr_comment.log
	exit 1
fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.34">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
  </buildWrappers>
</project>